{
  "openapi": "3.0.0",
  "info": {
    "title": "Nimbus API",
    "version": "1.0.0",
    "description": "API for Nimbus\n\n## Rate Limiting\nThis API implements rate limiting to ensure fair usage and protect our services. The current rate limit is:\n\n- **500 requests per 10 minutes** per IP address\n\nIf you exceed this limit, you will receive a 429 (Too Many Requests) response. Please wait for the rate limit window to reset before making additional requests.\n\nIf you need more, please contact us at **thanhle@getnimbus.io** or TG **@thanhle27** to get premium API Key."
  },
  "servers": [
    {
      "url": "https://api.getnimbus.io",
      "description": "API server"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publicAddress": {
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "NativeToken": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cmcId": {
            "type": "number"
          },
          "cmc_slug": {
            "type": "string"
          },
          "cgId": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "decimals": {
            "type": "number"
          }
        }
      },
      "NFTCollection": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "totalItems": {
            "type": "number"
          },
          "chain": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "scam": {
            "type": "boolean"
          }
        }
      },
      "NFTToken": {
        "type": "object",
        "properties": {
          "royalty": {
            "type": "number"
          },
          "imageUrl": {
            "type": "string"
          },
          "tokenId": {
            "type": "string"
          },
          "contractAddress": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rarityScore": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "cost": {
            "type": "number"
          }
        }
      },
      "NFTProfit": {
        "type": "object",
        "properties": {
          "realizedPnL": {
            "type": "number"
          },
          "unrealizedPnL": {
            "type": "number"
          }
        }
      },
      "NFTHolding": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "The owner address of the NFTs"
          },
          "nativeToken": {
            "$ref": "#/components/schemas/NativeToken"
          },
          "collection": {
            "$ref": "#/components/schemas/NFTCollection"
          },
          "collectionId": {
            "type": "string"
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTToken"
            }
          },
          "floorPrice": {
            "type": "number"
          },
          "marketPrice": {
            "type": "number"
          },
          "profit": {
            "$ref": "#/components/schemas/NFTProfit"
          }
        }
      },
      "TokenInfo": {
        "type": "object",
        "required": [
          "contract_address",
          "decimals",
          "name",
          "symbol",
          "logo"
        ],
        "properties": {
          "contract_address": {
            "type": "string",
            "example": "0x7016aae72cfc67f2fadf55769c0a7dd54291a583b63051a5ed71081cce836ac6::sca::SCA"
          },
          "timestamp": {
            "type": "number",
            "example": 1732681440
          },
          "price": {
            "type": "number",
            "example": 0.38829430763915
          },
          "last24hPrice": {
            "type": "number",
            "example": 0.2
          },
          "poolId": {
            "type": "string",
            "example": "lending:0x83556891f4a0f233ce7b05cfe7f957d4020492a34f5405b2cb9377d060bef4bf::spring_sui::SPRING_SUI"
          },
          "decimals": {
            "type": "number",
            "example": 9
          },
          "name": {
            "type": "string",
            "example": "Scallop"
          },
          "symbol": {
            "type": "string",
            "example": "SCA"
          },
          "source": {
            "type": "string",
            "example": "Nimbus"
          },
          "logo": {
            "type": "string",
            "example": "https://token-logo.service.getnimbus.io/api/v1/logo?address=0x7016...&chain=SUI"
          }
        }
      },
      "TokenPosition": {
        "type": "object",
        "required": [
          "amount",
          "value",
          "token"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "example": 230.100347601588
          },
          "value": {
            "type": "number",
            "example": 89.3466551594862
          },
          "token": {
            "$ref": "#/components/schemas/TokenInfo"
          }
        }
      },
      "ProtocolMeta": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Scallop"
          },
          "logo": {
            "type": "string",
            "example": "https://strapi-dev.scand.app/uploads/Scallop_e86ded6cf4.jpg"
          },
          "url": {
            "type": "string",
            "example": "https://scallop.io/"
          },
          "protocol": {
            "type": "string",
            "example": "Scallop"
          }
        }
      },
      "FarmingInfo": {
        "type": "object",
        "properties": {
          "base_apr": {
            "type": "number",
            "example": 10
          },
          "rewards_apr": {
            "type": "number",
            "example": 20
          },
          "total_apr": {
            "type": "number",
            "example": 30
          },
          "total_apy": {
            "type": "number",
            "example": 40
          },
          "rewards": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "token_address": {
                  "type": "string",
                  "example": "0x7016aae72cfc67f2fadf55769c0a7dd54291a583b63051a5ed71081cce836ac6::sca::SCA"
                },
                "logo": {
                  "type": "string",
                  "example": "https://token-logo.service.getnimbus.io/api/v1/logo?address=0x7016...&chain=SUI"
                },
                "token_name": {
                  "type": "string",
                  "example": "Scallop"
                },
                "token_symbol": {
                  "type": "string",
                  "example": "SCA"
                },
                "token_decimals": {
                  "type": "number",
                  "example": 9
                }
              }
            }
          }
        }
      },
      "FarmPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0x91bd1dc1cc5586706444ab8f7f9b2bf3f73e97aabb3269e03291763ed5fc4262"
          },
          "poolId": {
            "type": "string",
            "example": "0x123...abc"
          },
          "type": {
            "type": "string",
            "enum": [
              "Farm"
            ],
            "example": "Farm"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "claimed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "fee": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 0
                  },
                  "token": {
                    "$ref": "#/components/schemas/TokenInfo"
                  }
                }
              },
              "healthy": {
                "type": "number",
                "example": 1.5
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Boosted"
            ]
          },
          "chain": {
            "type": "string",
            "example": "SUI"
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "StakingPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0x7016aae72cfc67f2fadf55769c0a7dd54291a583b63051a5ed71081cce836ac6::sca::SCA"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              }
            }
          },
          "fee": {
            "type": "number",
            "example": 0
          },
          "chain": {
            "type": "string",
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "Staking"
            ],
            "example": "Staking"
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "NativeStakingPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0xb8068ad94d7f0448059ae3ea1d877f2af54792b2849d80e2753201adfa532411"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "validatorInfo": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "Suiet"
                  },
                  "logo": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "https://assets.suiet.app/logo.png"
                  }
                }
              }
            }
          },
          "fee": {
            "type": "number",
            "example": 0
          },
          "chain": {
            "type": "string",
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "NativeStaking"
            ],
            "example": "NativeStaking"
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "VestPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0xb8068ad94d7f0448059ae3ea1d877f2af54792b2849d80e2753201adfa532411"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "endDate": {
                "type": [
                  "string",
                  "null"
                ],
                "example": "2024-12-08T00:00:00.000Z",
                "nullable": true
              }
            }
          },
          "fee": {
            "type": "number",
            "example": 0
          },
          "chain": {
            "type": "string",
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "Vest"
            ],
            "example": "Vest"
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "LendingPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0x91bd1dc1cc5586706444ab8f7f9b2bf3f73e97aabb3269e03291763ed5fc4262"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              }
            }
          },
          "fee": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 0
              }
            }
          },
          "chain": {
            "type": "string",
            "enum": [
              "SUI"
            ],
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "Lending"
            ],
            "example": "Lending"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Boosted"
            ]
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "AMMPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0xe680066288f8ae8120ff9b5a7accfede974cdfdb07bae9a38b43ee3edf505a7e"
          },
          "owner": {
            "type": "string",
            "example": "0x692853c81afc8f847147c8a8b4368dc894697fc12b929ef3071482d27339815e"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              }
            }
          },
          "fee": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 0
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Farming"
            ]
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "chain": {
            "type": "string",
            "enum": [
              "SUI"
            ],
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "AMM"
            ],
            "example": "AMM"
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "CLMMPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0x4f551b64b0a7df43626ac93962c4eb67a58c29b0336ce166c739aee0bd717ddc"
          },
          "owner": {
            "type": "string",
            "example": "0x692853c81afc8f847147c8a8b4368dc894697fc12b929ef3071482d27339815e"
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "currentPrice": {
                "type": "string",
                "example": "1504.79"
              },
              "lowerPrice": {
                "type": "string",
                "example": "0.000000000000000054516"
              },
              "upperPrice": {
                "type": "string",
                "example": "18343046657752086085365.35"
              },
              "isInRange": {
                "type": "boolean",
                "example": true
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              }
            }
          },
          "chain": {
            "type": "string",
            "enum": [
              "SUI"
            ],
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "CLMM"
            ],
            "example": "CLMM"
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "BorrowPosition": {
        "type": "object",
        "properties": {
          "positionId": {
            "type": "string",
            "example": "0x91bd1dc1cc5586706444ab8f7f9b2bf3f73e97aabb3269e03291763ed5fc4262"
          },
          "owner": {
            "type": "string",
            "example": "0x7383b5e076553f79822374baca843c8fac02d510fb0f4ab344fc7ab591be94a7"
          },
          "poolId": {
            "type": "string",
            "example": "0x123...abc"
          },
          "input": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TokenPosition"
                },
                {
                  "$ref": "#/components/schemas/LendingPosition"
                }
              ]
            }
          },
          "yieldCollected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenPosition"
            }
          },
          "current": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "yield": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenPosition"
                }
              },
              "healthy": {
                "type": "number",
                "example": 1.5
              }
            }
          },
          "fee": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 0
              }
            }
          },
          "chain": {
            "type": "string",
            "example": "SUI"
          },
          "type": {
            "type": "string",
            "enum": [
              "Borrow"
            ],
            "example": "Borrow"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Boosted"
            ]
          },
          "farming": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingInfo"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "protocol": {
                "$ref": "#/components/schemas/ProtocolMeta"
              }
            }
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the webhook"
          },
          "owner": {
            "type": "string",
            "description": "The API key of the webhook owner"
          },
          "url": {
            "type": "string",
            "description": "The URL to which webhook events will be sent"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of addresses being monitored by this webhook"
          },
          "chain": {
            "type": "string",
            "description": "The blockchain chain associated with this webhook",
            "default": "SUI"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the webhook was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the webhook was last updated"
          }
        },
        "required": [
          "owner",
          "url",
          "addresses"
        ]
      },
      "SimulationResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "number",
                  "description": "Value of the investment"
                }
              }
            }
          },
          "il": {
            "type": "number",
            "description": "Impermanent loss percentage"
          },
          "ilAmount": {
            "type": "number",
            "description": "Impermanent loss amount"
          }
        }
      },
      "DeFiVault": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "protocol": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "LP",
              "VAULT",
              "STAKING",
              "LENDING"
            ]
          },
          "apr": {
            "type": "number",
            "description": "Base APR"
          },
          "apy": {
            "type": "number",
            "description": "Base APY"
          },
          "apr_rewards": {
            "type": "number",
            "description": "Bonus APR rewards"
          },
          "totalApr": {
            "type": "number",
            "description": "Total APR = base_apr + apr_rewards"
          },
          "totalApy": {
            "type": "number"
          },
          "tvl": {
            "type": "number"
          },
          "coins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tokens in pool/vault"
          },
          "rewards": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "token_address": {
                      "type": "string"
                    },
                    "token_name": {
                      "type": "string"
                    },
                    "token_symbol": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    }
                  }
                },
                "description": "The list of reward tokens"
              }
            }
          },
          "farmLink": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "default": "Nimbus"
          },
          "fees": {
            "type": "number"
          },
          "label": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "note": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "yieldSource": {
            "type": "string"
          },
          "riskFactors": {
            "type": "string"
          },
          "stats": {
            "type": "object",
            "properties": {
              "7d": {
                "type": "object",
                "properties": {
                  "minApr": {
                    "type": "number"
                  },
                  "maxApr": {
                    "type": "number"
                  },
                  "minApy": {
                    "type": "number"
                  },
                  "maxApy": {
                    "type": "number"
                  },
                  "minBaseApr": {
                    "type": "number"
                  },
                  "maxBaseApr": {
                    "type": "number"
                  },
                  "minRewardsApr": {
                    "type": "number"
                  },
                  "maxRewardsApr": {
                    "type": "number"
                  },
                  "minBaseApy": {
                    "type": "number"
                  },
                  "maxBaseApy": {
                    "type": "number"
                  },
                  "minRewardsApy": {
                    "type": "number"
                  },
                  "maxRewardsApy": {
                    "type": "number"
                  },
                  "minTvl": {
                    "type": "number"
                  },
                  "maxTvl": {
                    "type": "number"
                  }
                }
              },
              "30d": {
                "type": "object",
                "properties": {
                  "minApr": {
                    "type": "number"
                  },
                  "maxApr": {
                    "type": "number"
                  },
                  "minApy": {
                    "type": "number"
                  },
                  "maxApy": {
                    "type": "number"
                  },
                  "minBaseApr": {
                    "type": "number"
                  },
                  "maxBaseApr": {
                    "type": "number"
                  },
                  "minRewardsApr": {
                    "type": "number"
                  },
                  "maxRewardsApr": {
                    "type": "number"
                  },
                  "minBaseApy": {
                    "type": "number"
                  },
                  "maxBaseApy": {
                    "type": "number"
                  },
                  "minRewardsApy": {
                    "type": "number"
                  },
                  "maxRewardsApy": {
                    "type": "number"
                  },
                  "minTvl": {
                    "type": "number"
                  },
                  "maxTvl": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "limit": {
                "type": "number"
              },
              "offset": {
                "type": "number"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/v2/address/{address}/positions-prepare": {
      "get": {
        "summary": "Prepare positions for an address",
        "description": "Prepares and retrieves position information for a given address across various chains and protocols",
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0x692853c81afc8f847147c8a8b4368dc894697fc12b929ef3071482d27339815e",
            "description": "The address to prepare positions for"
          },
          {
            "in": "query",
            "name": "chain",
            "schema": {
              "type": "string",
              "enum": [
                "BTC",
                "SOL",
                "SUI",
                "TON",
                "ETH",
                "FANTOM",
                "RON",
                "BNB",
                "OP",
                "AVAX",
                "MATIC",
                "ARB",
                "BASE",
                "SCROLL",
                "ZKSYNC",
                "ALL"
              ]
            },
            "description": "The blockchain to query (default is \"ALL\")"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with prepared position information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "tags": []
}
